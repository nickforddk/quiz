@import "tailwindcss";

@theme {
  --color-*: initial;
  --color-white: var(--white);
  --color-black: var(--black);

  --color-light: var(--offwhite);
  --color-dark: var(--offblack);
  --color-alert: var(--alert);
  
  --color-blue-500: var(--blue);
  --color-cyan-500: var(--cyan);
  --color-green-500: var(--green);
  --color-orange-500: var(--orange);
  --color-red-500: var(--red);
  --color-violet-500: var(--violet);
  --color-grey-500: var(--grey);

  --color-blue-100: oklch(from var(--blue) 95% calc(c / 10) h);
  --color-cyan-100: oklch(from var(--cyan) 95% calc(c / 10) h);
  --color-green-100: oklch(from var(--green) 95% calc(c / 10) h);
  --color-orange-100: oklch(from var(--orange) 95% calc(c / 10) h);
  --color-red-100: oklch(from var(--red) 95% calc(c / 10) h);
  --color-violet-100: oklch(from var(--violet) 95% calc(c / 10) h);
  --color-grey-100: oklch(from var(--grey) 95% calc(c / 10) h);

  --color-blue-200: var(--blue-l);
  --color-cyan-200: var(--cyan-l);
  --color-green-200: var(--green-l);
  --color-orange-200: var(--orange-l);
  --color-red-200: var(--red-l);
  --color-violet-200: var(--violet-l);
  --color-grey-200: var(--grey-l);
  
  --color-blue-300: var(--blue-g);
  --color-cyan-300: var(--cyan-g);
  --color-green-300: var(--green-g);
  --color-orange-300: var(--orange-g);
  --color-red-300: var(--red-g);
  --color-violet-300: var(--violet-g);
  --color-grey-300: var(--grey-g);

  --color-blue-400: var(--blue-v);
  --color-cyan-400: var(--cyan-v);
  --color-green-400: var(--green-v);
  --color-orange-400: var(--orange-v);
  --color-red-400: var(--red-v);
  --color-violet-400: var(--violet-v);
  --color-grey-400: var(--grey-v);

  --color-blue-600: var(--blue-half);
  --color-cyan-600: var(--cyan-half);
  --color-green-600: var(--green-half);
  --color-orange-600: var(--orange-half);
  --color-red-600: var(--red-half);
  --color-violet-600: var(--violet-half);
  --color-grey-600: var(--grey-half);

  --color-blue-700: var(--blue-pr);
  --color-cyan-700: var(--cyan-pr);
  --color-green-700: var(--green-pr);
  --color-orange-700: var(--orange-pr);
  --color-red-700: var(--red-pr);
  --color-violet-700: var(--violet-pr);
  --color-grey-700: var(--grey-pr);

  --color-blue-800: var(--blue-d);
  --color-cyan-800: var(--cyan-d);
  --color-green-800: var(--green-d);
  --color-orange-800: var(--orange-d);
  --color-red-800: var(--red-d);
  --color-violet-800: var(--violet-d);
  --color-grey-800: var(--grey-d);

  --color-blue-900: oklch(from var(--blue) 10% calc(c / 3) h);
  --color-cyan-900: oklch(from var(--cyan) 10% calc(c / 3) h);
  --color-green-900: oklch(from var(--green) 10% calc(c / 3) h);
  --color-orange-900: oklch(from var(--orange) 10% calc(c / 3) h);
  --color-red-900: oklch(from var(--red) 10% calc(c / 3) h);
  --color-violet-900: oklch(from var(--violet) 10% calc(c / 3) h);
  --color-grey-900: oklch(from var(--grey) 10% calc(c / 3) h);

  --color-slate-100: var(--color-grey-100);
  --color-slate-200: var(--color-grey-200);
  --color-slate-300: var(--color-grey-300);
  --color-slate-400: var(--color-grey-400);
  --color-slate-500: var(--color-grey-500);
  --color-slate-600: var(--color-grey-600);
  --color-slate-700: var(--color-grey-700);
  --color-slate-800: var(--color-grey-800);
  --color-slate-900: var(--color-grey-900);

  --color-gray-100: var(--color-grey-100);
  --color-gray-200: var(--color-grey-200);
  --color-gray-300: var(--color-grey-300);
  --color-gray-400: var(--color-grey-400);
  --color-gray-500: var(--color-grey-500);
  --color-gray-600: var(--color-grey-600);
  --color-gray-700: var(--color-grey-700);
  --color-gray-800: var(--color-grey-800);
  --color-gray-900: var(--color-grey-900);

  --color-blue-50: var(--color-blue-100);
  --color-cyan-50: var(--color-cyan-100);
  --color-green-50: var(--color-green-100);
  --color-orange-50: var(--color-orange-100);
  --color-red-50: var(--color-red-100);
  --color-violet-50: var(--color-violet-100);
  --color-grey-50: var(--color-grey-100);
}

:root {
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;

  --spacing: calc(var(--base-unit) / 4);
  --gradient--light: 
            linear-gradient(to top, var(--white), var(--white-00) 50%),
            radial-gradient(circle at top, var(--white-00) 50%, var(--blue-g)),
            radial-gradient(circle at bottom right, var(--offwhite), var(--cyan-l));
  --gradient--dark: 
            linear-gradient(to top, var(--dark), var(--white-00) 50%),
            radial-gradient(circle at top, var(--white-00) 50%, var(--cyan-pr)),
            radial-gradient(circle at bottom right, var(--offblack), var(--blue-d));
}

body {
  margin: 0px;
  display: flex;
  align-items: center;
  gap: 2rem;
  background-color: light-dark(var(--white), var(--dark));
  background-attachment: fixed;
  min-height: 100svh;

  &:not(:has(.fullscreen)) {
    padding: var(--page--margin);
    background-image: var(--gradient--light);

    &:has(header) {      
      padding-top: 6rem;
    }

    @media (prefers-color-scheme: dark) {
      background-image: var(--gradient--dark);
    }

    @media (max-width: 600px) {
      padding-bottom: 2rem;
    }
  }
  &:has(.fullscreen) {
    --dark: var(--black);
    height: 100dvh;
    overflow: hidden;
  }

  h2.icon {
    display: flex;
    flex-flow: row;
    justify-content: space-between;
    align-items: start;

    &::after {
        content: "";
        mask-image: 
          var(--svg--circle),
          url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cmask id='cutout'%3E%3Cpath d='M 0 0 L 100 0 L 100 64.31 L 25 64.31 L 50 32.155 L 0 32.155 Z' fill='white' stroke='none'/%3E%3Ccircle cx='50' cy='32.155' r='14.31' fill='black'/%3E%3C/mask%3E%3C/defs%3E%3Ccircle cx='50' cy='32.155' r='32.155' fill='black' mask='url(%23cutout)'/%3E%3Ccircle cx='50' cy='85.69' r='14.31' fill='black'/%3E%3C/svg%3E");
        mask-composite: subtract;
        mask-size: contain;
        mask-position: center;
        mask-repeat: no-repeat;
        background: light-dark(var(--blue-pr), var(--cyan));
        width: 1lh;
        height: 1lh;
        clip-path: circle();
      }
  }
}

div#root {
  display: contents;

  :where(.border) {
    border-width: max(0.1em, 0.1rem);
  }
  .rounded:not([class*="rounded-"]) {
    border-radius: var(--border-rad);
  }
  [class*="bg-"] :is(h1, h2, h3, h4) {
    color: unset;
  }

  > header {
    > h1 {
      display: flex;
      flex-flow: row;
      gap: 1rem;
      font-size: var(--font-size--large);
      font-weight: 800;
      line-height: 1;
      color: light-dark(var(--dark), var(--white));

      &::before {
        content: "";
        mask-image: 
          var(--svg--circle),
          url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cmask id='cutout'%3E%3Cpath d='M 0 0 L 100 0 L 100 64.31 L 25 64.31 L 50 32.155 L 0 32.155 Z' fill='white' stroke='none'/%3E%3Ccircle cx='50' cy='32.155' r='14.31' fill='black'/%3E%3C/mask%3E%3C/defs%3E%3Ccircle cx='50' cy='32.155' r='32.155' fill='black' mask='url(%23cutout)'/%3E%3Ccircle cx='50' cy='85.69' r='14.31' fill='black'/%3E%3C/svg%3E");
        mask-composite: subtract;
        mask-size: contain;
        mask-position: center;
        mask-repeat: no-repeat;
        background: light-dark(var(--blue-pr), var(--cyan));
        width: 1lh;
        height: 1lh;
        clip-path: circle();
      }
    }
  }

  > footer {
    all: unset;
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: space-between;
    gap: 0.5rem;
    width: 100%;

    &::before {
      display: none;
    }

    > a {
      text-decoration: none !important;
      transition: all 0.2s ease;
    }

    > a.sdu {
      display: flex;
      flex-flow: column;
      line-height: var(--int-padding);
      width: 3lh;
      height: 1lh;
      background: light-dark(var(--black), var(--white));
      border-radius: var(--border-rad);

      mask: 
        linear-gradient(to left, var(--black) 50%, var(--black) 50%),
        url('data:image/svg+xml,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 83 22" xml:space="preserve"><g fill="%23000" fill-rule="evenodd"><path d="M2.38 16.65c1.085 1.142 2.74 2 4.474 2 1.63 0 2.77-.962 2.77-2.286 0-2.342-3.528-2.627-6.078-4.056C2.054 11.476.86 10.228.86 8.176c0-3.25 3.12-5.123 6.266-5.123 1.927 0 3.718.443 5.508 1.716l-1.9 2.6C9.975 6.692 8.7 6.17 7.453 6.17c-1.383 0-2.93.573-2.93 1.976 0 2.937 8.763 2.03 8.763 8.163 0 3.225-3.012 5.46-6.43 5.46-2.55 0-4.91-1.014-6.863-2.73l2.387-2.39M22.372 3.313c3.01 0 4.99.624 6.538 1.716 2.332 1.663 3.77 4.366 3.77 7.382 0 3.015-1.438 5.72-3.77 7.382-1.547 1.092-3.527 1.717-6.538 1.717h-5.97V3.314h5.97zm5.262 5.147c-1.06-1.273-2.604-2.027-4.856-2.027h-2.712V18.39h2.712c2.252 0 3.797-.753 4.856-2.026.868-1.042 1.384-2.445 1.384-3.952 0-1.508-.516-2.912-1.384-3.952zM38.103 19.898c-1.573-1.352-2.44-3.275-2.44-6.056V3.312h3.66v10.79c0 1.662.464 2.677 1.25 3.378.813.754 1.952 1.17 3.228 1.17 1.275 0 2.414-.416 3.23-1.17.785-.7 1.246-1.716 1.246-3.38V3.314h3.662v10.53c0 2.78-.867 4.703-2.44 6.055-1.466 1.248-3.555 1.872-5.697 1.872-2.143 0-4.232-.624-5.697-1.872M70.653 10.864c.243 1.148 1.184 2.75 4.212 3.18 1.82.255 6.052-.317 8.026-.774-1.31-2.193-3.69-4.636-6.636-5.307-2.963-.673-4.92.19-5.605 1.966M65.927 13.815s-.217-.182-.96-.19c-1.31-.015-2.224.56-2.86 1.923-.614 1.317-.19 3.387.64 4.583.47.674 1.29 1.52 2.27 1.52s1.257-.49 1.6-.49c.346 0 .664.478 1.683.478 1.02 0 1.825-.907 2.163-1.42.785-1.183 1.18-3.33.61-4.637-.494-1.135-1.337-1.925-2.422-1.937-.778-.01-1.527.272-1.527.272"></path><path d="M71.1 10.875L71.1 9.94c-1.747-.367-4.8-.333-7.66.342-1.66.392-4.993 1.337-8.213 3.542l.743.997c2.335-1.845 4.64-2.787 6.466-3.224 2.425-.58 3.71.977 3.57 2.56l1.184-.002c-.192-1.955-.98-3.002-2.352-3.293 1.47-.318 4.696-.523 6.265.015M66.412 4.234C69.21 1.43 74.742.39 74.742.39c-2.596 1.984-2.65 4.423-5.236 6.43-1.637 1.27-4.02 1.758-5.283 1.835.074-.767.142-2.367 2.19-4.42"></path></g></svg>');
      mask-size: 0px, 100%;
      mask-position: right, 50% 45%;
      mask-repeat: no-repeat;
      mask-composite: exclude;

      &:not(:hover) {
        mask-size: 100%, 75%;
        width: 2lh;
        border-radius: 1lh;
      }
    }

    > a.nf {
      --ncol: light-dark(var(--primary), var(--white));
      --fcol: var(--ncol);
      content: "";
      display: flex;
      line-height: var(--int-padding);
      width: 2lh;
      height: 1lh;
      background: currentColor;
      
      clip-path: inset(0px 0px 0px 0px round 0px);
      mask-image: 
          linear-gradient(45deg, var(--black) 50%, var(--black-00) 50%),
          linear-gradient(45deg, var(--black-00) 50%, var(--black) 50%),
          var(--logo-element--n),
          var(--logo-element--f);
      mask-composite: add, intersect, add;
      mask-position: 0% 100%, 100% 0%, 0% 100%, 100% 0%;
      mask-size: 1lh 1lh, 2lh 2lh, 1lh 1lh, 1lh 1lh;
      mask-repeat: no-repeat;
      background-image:
          linear-gradient(45deg, var(--ncol) 50%, var(--fcol) 50%), 
          linear-gradient(45deg, var(--fcol) 50%, var(--fcol) 50%);
      background-color: var(--fcol);
      background-size: 1lh 1lh;
      background-position: 0% 0%, 1lh 0%;
      background-repeat: no-repeat;
      transition: all 0.2s ease;

      &:not(:hover) {
        --fcol: var(--cyan);
        clip-path: inset(0px 0px 0px 0px round 0.5lh);
        width: 1lh;
        mask-size: 0.95lh 0.95lh, 0.95lh 0.95lh, 1lh 1lh, 1lh 1lh;
      } 
    }
  }

  .qrcode {
    background: currentColor;
    box-sizing: border-box;
    border-radius: var(--border-rad);
    display: block;
    mask: url(/git_quiz.svg) no-repeat center / contain;
  }

  .scoreboard {
    animation: scoreboard-in 0.5s ease forwards;
  }
}

@keyframes scoreboard-in {
  0% {
    translate: 0% 100%;
    background: light-dark(var(--blue-pr), var(--cyan));
  }
  0%, 25% {
    clip-path: inset(2rem calc(50vw - 2rem) calc(100vh - 6rem) calc(50vw - 2rem) round 2rem);
    padding-top: 0vh;
  }
  50% {
    clip-path: inset(2rem 2rem calc(100vh - 6rem) 2rem round 2rem);
  }
  25%, 100% {
    translate: 0% 0%;
  }
  100% {
    clip-path: inset(0% round 0px);
  }
}

body > script {
  position: absolute;
  top: 0px;
  left: 0px;
  overflow: hidden;
  width: 1px;
  height: 0px;
}



i.loading {
  display: block;
  width: calc(1.5 * var(--int-padding));
  height: calc(1.5 * var(--int-padding));
  clip-path: circle();
  background: 
    conic-gradient(from var(--minutecycle),
    var(--white-00) 0deg,
    var(--cyan-g),
    var(--cyan),
    var(--blue-pr) 360deg);
  mask-image:
    url('data:image/svg+xml,<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle cx="50" cy="50" r="37.5" fill="black" stroke="none" /></svg>'),
    url('data:image/svg+xml,<svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle cx="50" cy="50" r="50" fill="black" stroke="none" /></svg>');
  mask-composite: exclude;
  animation: spin ease 1s infinite, timer 60s linear infinite;

  @media (prefers-color-scheme: dark) {
    background: 
      conic-gradient(from var(--minutecycle),
      var(--white-00) 0deg,
      var(--blue-pr),
      var(--blue-half),
      var(--cyan) 360deg);
  }
}

@property --minutecycle {
    syntax: '<angle>';
    inherits: false;
    initial-value: 0turn;
}
@keyframes spin {
    100% {
        transform: rotate(360deg);
    }
}
@keyframes timer {
    0% {
        --minutecycle: 0turn;
    }
    100% {
        --minutecycle: 1turn;
    }
}